<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[notions:iaarchiver]]></title><description><![CDATA[blog where I write notions]]></description><link>http://iaarchiver.github.io</link><generator>NodeJS RSS Module</generator><lastBuildDate>Tue, 08 Jul 2014 13:28:44 GMT</lastBuildDate><atom:link href="http://iaarchiver.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[s3cmdでAmazonS3と同期する]]></title><description><![CDATA[<h2 id="s3cmd-ubuntu-">s3cmdをUbuntuにインストール</h2>
<p><a href="http://s3tools.org/repositories">http://s3tools.org/repositories</a></p>
<pre><code>$ wget -O- -q http://s3tools.org/repo/deb-all/stable/s3tools.key | su<span class="operator"><span class="keyword">do</span> apt-<span class="keyword">key</span> <span class="keyword">add</span> -
$ sudo wget -O/etc/apt/sources.list.d/s3tools.list http://s3tools.org/repo/deb-<span class="keyword">all</span>/stable/s3tools.list
$ sudo apt-<span class="keyword">get</span> <span class="keyword">update</span> &amp;&amp; sudo apt-<span class="keyword">get</span> install s3cmd</code></pre>
<p>とりあえずAccess KeyとSecret Keyが必要です．IAMでS3へのアクセス権のみを持ったアカウントを一つ作ります．</p>
<ol>
<li>ダッシュボードからIAMを選択（S3じゃない）</li>
<li>Create New Usersで適当な名前を入れる．</li>
<li><p>credentials.csvを必ずダウンロードしておきます．中にはscretidがふくまれています．中身は以下のようになっています．</p>
<pre><code> User Name,Access Key Id,Secret Access Key
 <span class="string">"iaarchiver_s3"</span>,<span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span>,<span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span></code></pre>
</li>
<li><p>一覧からuserを選択し，permissionsのタブからUser Policyを追加します．ここではテンプレートからS3fullaccessを選択する</p>
</li>
</ol>
<p>アクセスキーとシークレットキーを手に入れたらs3cmdの初期設定を行います．</p>
<pre><code>$ s3cmd <span class="comment">--configure</span>

Enter <span class="keyword">new</span> values <span class="keyword">or</span> accept defaults <span class="keyword">in</span> brackets <span class="keyword">with</span> Enter.
Refer <span class="keyword">to</span> user manual <span class="keyword">for</span> detailed description <span class="keyword">of</span> <span class="keyword">all</span> options.

<span class="keyword">Access</span> key <span class="keyword">and</span> Secret key are your identifiers <span class="keyword">for</span> Amazon S3
<span class="keyword">Access</span> Key: &lt;&lt;アクセスキーを入力&gt;&gt;
Secret Key: &lt;&lt;シークレットキーを入力&gt;&gt;

Encryption password <span class="keyword">is</span> used <span class="keyword">to</span> protect your files from reading
by unauthorized persons <span class="keyword">while</span> <span class="keyword">in</span> transfer <span class="keyword">to</span> S3
Encryption password: &lt;&lt;パスワード入力&gt;&gt;
Path <span class="keyword">to</span> GPG program [/usr/bin/gpg]: 

<span class="keyword">When</span> using secure HTTPS protocol <span class="keyword">all</span> communication <span class="keyword">with</span> Amazon S3
servers <span class="keyword">is</span> <span class="keyword">protected</span> from <span class="number">3</span>rd party eavesdropping. This method <span class="keyword">is</span>
slower than plain HTTP <span class="keyword">and</span> can<span class="attribute">'t</span> be used <span class="keyword">if</span> you<span class="attribute">'re</span> behind a proxy
<span class="keyword">Use</span> HTTPS protocol [No]: 

<span class="keyword">On</span> some networks <span class="keyword">all</span> internet <span class="keyword">access</span> must go through a HTTP proxy.
Try setting it here <span class="keyword">if</span> you can<span class="attribute">'t</span> conect <span class="keyword">to</span> S3 directly
HTTP Proxy server name: 

<span class="keyword">New</span> settings:
  <span class="keyword">Access</span> Key: *********************
  Secret Key: ************************************
  Encryption password: *************
  Path <span class="keyword">to</span> GPG program: /usr/bin/gpg
  <span class="keyword">Use</span> HTTPS protocol: False
  HTTP Proxy server name: 
  HTTP Proxy server <span class="keyword">port</span>: <span class="number">0</span>

Test <span class="keyword">access</span> <span class="keyword">with</span> supplied credentials? [Y/n] 
Please <span class="keyword">wait</span>, attempting <span class="keyword">to</span> list <span class="keyword">all</span> buckets...
Success. Your <span class="keyword">access</span> key <span class="keyword">and</span> secret key worked fine :-)

Now verifying that encryption works...
Success. Encryption <span class="keyword">and</span> decryption worked fine :-)

Save settings? [y/N] y
<span class="keyword">Configuration</span> saved <span class="keyword">to</span> '/home/iaarchiver/.s3cfg'</code></pre>
<h2 id="-">基本コマンド＆トラブルの覚書</h2>
<h3 id="-">ファイルを送る</h3>
<pre><code>s3cmd put test<span class="variable">.txt</span> s3:<span class="comment">//mybacket</span></code></pre>
<h3 id="-">ファイルを受け取る</h3>
<pre><code>s3cmd <span class="keyword">get</span> s3:<span class="comment">//mybacket .</span></code></pre>
<h3 id="-">ファイルの一覧を見る</h3>
<pre><code><span class="title">s3cmd</span> ls s3://mybacket</code></pre>
<h3 id="-">ファイルを削除する</h3>
<pre><code><span class="title">s3cmd</span> del s3://mybacket </code></pre>
<h3 id="-">ディレクトリを同期する</h3>
<pre><code>s3cmd sync ~<span class="regexp">/local_backet s3:/</span><span class="regexp">/mybacket/</span></code></pre>
<h3 id="-">新しいバケットを作成する</h3>
<pre><code><span class="title">s3cmd</span> mb s3://mybacket</code></pre>
<h3 id="-">バケットを削除する（空にする必要があり）</h3>
<pre><code><span class="title">s3cmd</span> rb s3://mybacket</code></pre>
<h3 id="-s3cfg-">設定ファイル（.s3cfg）を指定する</h3>
<pre><code>s3cmd -c [--config] $HOME/.config/s3cfg <span class="keyword">...</span></code></pre>
<h3 id="-">エラーが出てバケットが作れないとき</h3>
<pre><code>The requested bucket name is not available. The bucket <span class="class"><span class="keyword">namespace</span> <span class="title">is</span> <span class="title">shared</span> <span class="title">by</span> <span class="title">all</span> <span class="title">users</span> <span class="title">of</span> <span class="title">the</span> <span class="title">system</span>. <span class="title">Please</span> <span class="title">select</span> <span class="title">a</span> <span class="title">different</span> <span class="title">name</span> <span class="title">and</span> <span class="title">try</span> <span class="title">again</span>.</code></pre>
<p>というエラーが出るとき，バケット名でエラーが起きています．aws全体で名前空間が共有されているので先に他の人が同名のバケットを作ってしまっているとダメ．</p>
<h3 id="warning-redirected-to-">WARNING: Redirected to...と出る</h3>
<p><a href="http://xoxo-infra.hatenablog.com/entry/2013/02/06/020930">http://xoxo-infra.hatenablog.com/entry/2013/02/06/020930</a></p>
<p>~/.s3cfg内で設定されているロケールを日本のものに変更</p>
<h3 id="-">特定のフォルダを同期させたくないとき</h3>
<p>例えば.gitなど
いくつかやりかたはありそう．s3cmd -hで確認
例えば不可視フォルダ（.から始まる）は同期しないやり方は</p>
<pre><code><span class="comment">s3cmd</span> <span class="comment">sync</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">exclude='^(</span>.<span class="comment">*/)*\</span>.<span class="literal">+</span><span class="string">.</span><span class="comment">*'</span> <span class="comment">~/</span>.<span class="comment">dir_synced</span> <span class="comment">s3://mybacket</code></pre>
<h3 id="mirror-">mirrorしたいとき</h3>
<p>--delete-removedをつける
ミラーしない場合は --no-delete-removedと明示する</p>
<h2 id="-">デプロイ用のスクリプトを作成する</h2>
<p>簡単な例は例えば以下の様なかんじ．</p>
<pre><code><span class="shebang">#!/bin/bash</span>

TARGET=<span class="string">"<span class="variable">$HOME</span>/Dropbox/Codes/Grunt/scriptogr.am/"</span>
BUCKET=<span class="string">"s3://s3.iaarchiver.net/"</span>

<span class="comment"># ignore invisible file/dir</span>
s3cmd -c <span class="variable">$HOME</span>/.config/.s3cfg sync \
        --rexclude=<span class="string">"^(.*/)*\.+.*"</span> \
        --recursive \
        --delete-removed \
        <span class="variable">$TARGET</span> <span class="variable">$BUCKET</span></code></pre>
<p>このとき$TARGETで指定したフォルダ内のコンテンツが再帰的にS3のバケットにミラーリングされる．</p>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2245.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2245.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 13:45:00 GMT</pubDate></item><item><title><![CDATA[vimでshell実行後のEnterを押してくださいというプロンプトを消す]]></title><description><![CDATA[<p><a href="http://superuser.com/questions/498306/how-to-remove-the-prompt-when-execute-shell-command-in-vim">http://superuser.com/questions/498306/how-to-remove-the-prompt-when-execute-shell-command-in-vim</a></p>
<pre><code><span class="pseudo">:silent</span> !<span class="tag">open</span> "%<span class="pseudo">:p</span><span class="pseudo">:h"</span></code></pre>
<p>とする．しかしtmuxではCtrl-Lでリドローしないと正しく表示されないので最後にredraw!を加える</p>
<pre><code><span class="symbol">:exe</span> <span class="string">"silent !open \"%:p:h\""</span> | redraw!</code></pre>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2231.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2231.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 13:31:00 GMT</pubDate></item><item><title><![CDATA[tmuxでペイン分割したらCWDを維持してくれない]]></title><description><![CDATA[<p><a href="http://d.hatena.ne.jp/tacahiroy/20140321/1395414592">http://d.hatena.ne.jp/tacahiroy/20140321/1395414592</a></p>
<p>以前は<code>default-path</code>として勝手にCWDを維持して分割してくれていたみたいだが，tmux1.9より分割時のCWDは環境変数$PWDを参照する仕様に変更されたみたい．</p>
<pre><code><span class="title">tmux</span> split-window [-c <span class="variable">$PWD</span>]</code></pre>
<p>そのおかげでスクリプトから<code>tmux split-window</code>する場合は正しい$PWDを読んでくれるときもあれば，古い$PWDを読んでしまうこともある．</p>
<p>なので分割前ペインのCWDをきちんと維持して分割するには以下を使用する</p>
<pre><code><span class="title">tmux</span> split-window -c <span class="string">'#{pane_current_path}'</span></code></pre>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2230.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2230.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 13:30:00 GMT</pubDate></item><item><title><![CDATA[Ubuntu上のVMPlayer使用時にsynergysが落ちる]]></title><description><![CDATA[<p><a href="http://synergy-foss.org/spit/issues/details/3561/">http://synergy-foss.org/spit/issues/details/3561/</a></p>
<p>vmwareのマウス切り替えとsynergyのスクリーン切り替えがコンフリクトするらしい．その結果synergysがSegmentationFaultエラーを出す．Vmwareウインドウの境界とsynergyの境界を同時（短時間の間）に越えると必ず落ちる．</p>
<p>対策はsynergy.confにswitchDelayを設定すること．</p>
<pre><code><span class="attribute">section</span>: <span class="string">options</span>
    <span class="attribute">switchDelay</span>: <span class="string">500</span>
<span class="attribute">end</code></pre>
<p>これでほぼ落ちることはなくなった．</p>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2221.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2221.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 13:21:00 GMT</pubDate></item><item><title><![CDATA[シンボリックリンクのオリジナルのパスを取得する]]></title><description><![CDATA[<p>結論から言えば<code>pwd -P</code>をサブシェルで<code>cd</code>してから使う方法が一番良いっぽい．</p>
<pre><code># シンボリックリンクのパスを<span class="variable">$file</span>としたとき
originalpath=<span class="variable">$(</span>cd <span class="variable">$(</span><span class="keyword">dirname</span> <span class="variable">$file</span>); <span class="keyword">pwd</span> -P)</code></pre>
<p><code>pwd -P</code>でカレントディレクトリのオリジナルパスを表示してくれる．
単純に相対パスを絶対パスへ変換したいだけなら<code>-P</code>を取ればよい．</p>
<p>他の方法としては<code>readlink</code>コマンドを使用する方法がある</p>
<pre><code>readlink ~/<span class="variable">.vim</span>
/Users/iaarchiver/Dropbox/Sync/dotfiles/<span class="variable">.vim</span></code></pre>
<p>しかしこれは引数がSymlink以外だと何にも返してくれない．Symlinkであっても辿れるのは対象のリンク先のみ．再帰的にオリジナルを探索してくれるわけではないので注意．</p>
<p>GNUでは再帰的にオリジナルを探してくれる<code>readlink -f</code>, 他にも<code>realpath</code>もあるらしい．</p>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2217.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2217.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 13:17:00 GMT</pubDate></item><item><title><![CDATA[コマンドを指定してTerminal.appを実行する]]></title><description><![CDATA[<p>Terminal.appでは以下のように引数を与えることが可能．</p>
<ul>
<li><p>ワーキングディレクトリを指定して起動する</p>
<pre><code>  <span class="title">open</span> -a <span class="string">"Terminal"</span> ~/Desktop</code></pre>
</li>
<li><p>実行ファイルを指定して起動</p>
<pre><code>  <span class="title">open</span> -a <span class="string">"Terminal"</span><span class="string">" ~/test.sh</code></pre>
</li>
</ul>
<p>しかしGnome-Terminalのように直接コマンドを引数に与えることができない．シェルスクリプトやVimなどでどうしてもコマンドを与えたい場合は次のような方法がある．</p>
<h2 id="tmp-">tmpファイルを経由する</h2>
<pre><code><span class="title">echo</span> <span class="string">"echo 'Hello'"</span> &gt; .tmp/tmp; <span class="title">chmod</span> +x .tmp/tmp; <span class="title">open</span> -a <span class="string">"Terminal"</span> .tmp/tmp</code></pre>
<h2 id="applescript-">Applescriptを経由する</h2>
<pre><code><span class="function_start"><span class="keyword">on</span> <span class="title">run</span></span> argv
    <span class="comment">-- 引数がひとつのみのとき実行する</span>
    <span class="keyword">if</span> <span class="property">length</span> <span class="keyword">of</span> argv <span class="keyword">is</span> <span class="number">1</span> <span class="keyword">then</span>
        <span class="keyword">set</span> launch_command <span class="keyword">to</span> <span class="keyword">the</span> <span class="keyword">first</span> <span class="property">item</span> <span class="keyword">of</span> argv
        <span class="keyword">tell</span> <span class="type">application</span> <span class="string">"Terminal"</span>
            do <span class="keyword">script</span> launch_command
            <span class="command">activate</span>
        <span class="keyword">end</span> <span class="keyword">tell</span>        
    <span class="keyword">end</span> <span class="keyword">if</span>
<span class="keyword">end</span> <span class="command">run</span></code></pre>
<p>上のコードを<code>OpenTerminalWithCommand.scpt</code>として保存すれば以下のようにして利用可能．</p>
<pre><code><span class="title">osascript</span> OpenTerminalWithCommand.scpt <span class="string">"echo Hi"</span></code></pre>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2205.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2205.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 13:05:00 GMT</pubDate></item><item><title><![CDATA[特定のアプリのみ終了時にウインドウを閉じる]]></title><description><![CDATA[<p>Mavericksではアプリケーション終了時の状態を保存し，再び実行したときに復元するのがデフォルト．これはシステム環境設定＞一般＞”アプリケーションを終了するときにウィンドウを閉じる”というオプションをオンにすることで無効にできる．</p>
<p>便利なので有効にしておきたいが，Terminal.appなど一部アプリケーションでは終了時のウインドウを消したい場合，以下のコマンドで特定のアプリのみ無効にすることができる．</p>
<pre><code>defaults write com<span class="variable">.apple</span><span class="variable">.Terminal</span> NSQuitAlwaysKeepsWindows -<span class="keyword">int</span> <span class="number">0</span></code></pre>
<p>ちなみにアプリの識別子（<code>com.apple.Terminal</code>など）は以下のように取得可能．</p>
<pre><code>osascript -e <span class="attribute">'id</span> <span class="keyword">of</span> app <span class="string">"Terminal"</span>'</code></pre>
<p><a href="http://superuser.com/questions/346369/getting-the-bundle-identifier-of-an-os-x-application-in-a-shell-script">http://superuser.com/questions/346369/getting-the-bundle-identifier-of-an-os-x-application-in-a-shell-script</a></p>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2140.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2140.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 12:40:00 GMT</pubDate></item><item><title><![CDATA[Info.plistにLSBackgroundOnlyを設定する]]></title><description><![CDATA[<p>Applescriptでアプリを書きだした時，実行する度にドックでアイコンが一瞬バウンドするのを防ぐにはLSBackgroundOnlyキーをTrueにしてやると良い．</p>
<p>以下を.app/Contents/info.plstに追加する</p>
<pre><code><span class="tag">&lt;<span class="title">key</span>&gt;</span>LSBackgroundOnly<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
<span class="tag">&lt;<span class="title">string</span>&gt;</span>1<span class="tag">&lt;/<span class="title">string</span>&gt;</span></code></pre>
<p>以下のように一発で設定することもできる．</p>
<pre><code>/usr/libexec/PlistBuddy -c 'Add :LSBackgroundOnly <span class="keyword">bool</span> <span class="literal">true</span>' ~/Applications/test.app/Contents/Info.plist</code></pre>
]]></description><link>http://iaarchiver.github.io/posts/2014-06-27-1125.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-06-27-1125.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Fri, 27 Jun 2014 02:25:00 GMT</pubDate></item><item><title><![CDATA[LinuxからDayOneの読み書きを行う]]></title><description><![CDATA[<p>コマンドラインからテキストをジャーナリングできる<a href="http://maebert.github.io/jrnl/">jrnl</a>というアプリを使用してDayOneのエントリーを読み書きする方法のメモ．</p>
<p>MacであればDayOneオフィシャルの<a href="http://dayoneapp.com/tools/">コマンドラインツール</a>が使用できるので，それ以外の端末からDayOneエントリーを操作したい人向けです．</p>
<h2 id="jrnl-">jrnlのインストールと起動</h2>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> pip install jrnl
$ jrnl
Path <span class="keyword">to</span> your journal file (leave blank <span class="keyword">for</span> ~/journal.txt): 
Enter password <span class="keyword">for</span> journal (leave blank <span class="keyword">for</span> <span class="keyword">no</span> encryption): 
[Compose Entry] </code></pre>
<p>初回起動時に保存先とパスワードを聞かれますが無入力で良いです．この設定は<code>~/.jrnl_config</code>にて変更が可能です．</p>
<h2 id="dayone-">DayOneのエントリーを統合する</h2>
<p><code>~/.jrnl_config</code>の<code>journals</code>キーを以下のように変更．</p>
<pre><code>&quot;journals&quot;: {
    &quot;default&quot;: &quot;/path/to/Journal.dayone/&quot;
}</code></pre>
<p><code>Journal.dayone</code>はDayOneのエントリーを保存しているフォルダであり，DayOneの同期先によって異なります．例えばDropboxで同期している場合は<code>/path/to/Dropbox/Apps/Day\ One/Journal.dayone</code>のようになります．</p>
<h2 id="keyerror-time-zone-">KeyError:&#39;Time Zone&#39;が出るとき</h2>
<p>最新のバージョンのDayOneではすべての新規エントリーにタイムゾーンが付与される仕様になっていますが，古いエントリーにタイムゾーンの情報が付与されていないとき，それが原因でエラーが出ます．（jrnl1.4.2で確認．今後修正されるかも）</p>
<pre><code><span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/jrnl/Journal.py"</span>, line <span class="number">316</span>, <span class="keyword">in</span> parse
timezone = pytz.timezone(dict_entry[<span class="attribute">'Time</span> Zone'])
KeyError: <span class="attribute">'Time</span> Zone'</code></pre>
<p>jrnlを起動した際に上のようなエラーが出るときは<code>sudo emacs /usr/local/lib/python2.7/dist-packages/jrnl/Journal.py</code>でエディタを開き，以下のように編集します．</p>
<pre><code><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, filenames)</span>:</span>
    <span class="string">"""Instead of parsing a string into an entry, this method will take a list
    of filenames, interpret each as a plist file and create a new entry from that."""</span>
    self.entries = []
    <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:
        <span class="keyword">with</span> open(filename, <span class="string">'rb'</span>) <span class="keyword">as</span> plist_entry:
            dict_entry = plistlib.readPlist(plist_entry)
            <span class="keyword">try</span>:
                timezone = pytz.timezone(dict_entry[<span class="string">'Time Zone'</span>])
  -         <span class="keyword">except</span> pytz.exceptions.UnknownTimeZoneError:
  +         <span class="keyword">except</span> :
                timezone = pytz.timezone(util.get_local_timezone())</code></pre>
<h2 id="jrnl1-4-2-">jrnl1.4.2でできること</h2>
<ul>
<li>最近追加したエントリーを３件表示<pre><code>  <span class="title">jrnl</span> -n <span class="number">3</span></code></pre>
</li>
<li>すべてのエントリーのタイトルのみ表示<pre><code>  <span class="title">jrnl</span> -short</code></pre>
</li>
<li>エントリーを追加<pre><code>  <span class="title">jrnl</span>
  [Compose Entry]
  <span class="comment"># Enterで入力終了</span></code></pre>
</li>
<li>日時とタグを指定してエントリーを追加<pre><code>  <span class="title">jrnl</span> yesterday: 鳩のえさやり @公園</code></pre>
</li>
</ul>
<h2 id="jrnl1-4-2-">jrnl1.4.2でできないこと</h2>
<ul>
<li>過去エントリーの編集，削除（jrnlを経由せずに<code>Journal.dayone</code>フォルダー内の<code>.doentry</code>ファイルを直接編集/削除は可能ですが，同期したMacやiPhoneで操作したほうが良いです．）</li>
<li>エントリーにメディア（画像，音声など）を追加する</li>
<li>エントリーの付与されたメディアを表示する</li>
</ul>
]]></description><link>http://iaarchiver.github.io/posts/2013-07-29-0152.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2013-07-29-0152.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Sun, 28 Jul 2013 16:52:00 GMT</pubDate></item><item><title><![CDATA[Ubuntu13.04でTimeCapsuleをマウントする]]></title><description><![CDATA[<p><a href="http://askubuntu.com/questions/285874/how-can-i-mount-cifs-shares-in-kubuntu-13-04">http://askubuntu.com/questions/285874/how-can-i-mount-cifs-shares-in-kubuntu-13-04</a></p>
<p>12.10のときと若干変更があったのでメモ．確認環境は13.04(64bit)，TimeCapsuleの共有ディスクはデバイスパスワードでアクセス制限している状態です．</p>
<p>予め<code>sudo apt-get install samba cifs-utils</code>を実行してsambaとcifs-utilsをインストールを確認しておきます．</p>
<h2 id="timecapsule-ip-">TimeCapsuleのホスト名，IPアドレスをまずは確認する．</h2>
<p>TimeCapsuleのIPアドレスやホスト名はmac上でAirmacユーティリティを使用することで確認できますが，Ubuntuから確認するには以下を実行します．</p>
<pre><code><span class="comment">$</span> <span class="comment">avahi</span>-<span class="comment">browse</span> <span class="literal">-</span><span class="comment">a</span> <span class="literal">-</span><span class="comment">p</code></pre>
<p>Bonjourネットワークに存在するすべてのホスト情報が一覧で表示されますので，その中からTimeCapsuleのものと思われるホスト名（hostname）とローカルIPアドレス（address）を確認します．</p>
<pre><code><span class="keyword">...</span>
=  wlan0 IPv4 TimeCapsule                                   Apple AirPort        local
   hostname = [TimeCapsule.local]
   address = [<span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span>]
   port = [<span class="number">5009</span>]
<span class="keyword">...</span></code></pre>
<p>このような表示が見つかれば，<code>TimeCapsule.local</code>，もしくは<code>192.168.0.1</code>でTimeCapsuleにアクセスすることが確認できます．</p>
<h2 id="-">端末からマウントさせる</h2>
<p><code>TimeCapsule.local</code>というホスト名のTimeCapsuleを<code>/media/timecapsule</code>にマウントさせるには以下を実行します．（予め<code>sudo mkdir /media/timecapsule</code>でマウントポイントのディレクトリを作成しておく必要があります．）</p>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> mount.cifs //TimeCapsule.<span class="keyword">local</span>/TimeCapsule /media/timecapsule -o pass=PASWORD,rw,iocharset=utf8,file_mode=<span class="number">0777</span>,dir_mode=<span class="number">0777</span>,sec=ntlm</code></pre>
<p><code>//TimeCapsule.local/</code>の部分は<code>//192.168.0.1/</code>のようにローカルIPアドレスで指定しても構いません．（13.04では<code>sec=ntlm</code>オプションが必要になりました．）</p>
<p>アンマウントさせる場合は以下を実行します．</p>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> umount /media/timecapsule</code></pre>
<h2 id="fstab-">fstabで自動マウントさせる</h2>
<p>起動時にマウントさせるには<code>/etc/fstab</code>に以下の行を追加します．</p>
<pre><code>/<span class="regexp">/TimeCapsule.local/</span><span class="constant">TimeCapsule</span>/  <span class="regexp">/media/timecapsule</span>  cifs password=macintosh,rw,iocharset=utf8,file_mode=<span class="number">0777</span>,dir_mode=<span class="number">0777</span>,sec=ntlm</code></pre>
<p>追加後，再起動もしくは<code>sudo mount -a</code>を実行でマウントが確認できれば成功です．</p>
]]></description><link>http://iaarchiver.github.io/posts/2013-07-11-2152.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2013-07-11-2152.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Thu, 11 Jul 2013 12:52:00 GMT</pubDate></item></channel></rss>