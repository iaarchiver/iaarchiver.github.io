<?xml version="1.0" encoding="UTF-8"?>
<<<<<<< HEAD
<<<<<<< HEAD
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[notions:iaarchiver]]></title><description><![CDATA[blog where I write notions]]></description><link>http://iaarchiver.github.io</link><generator>NodeJS RSS Module</generator><lastBuildDate>Mon, 07 Jul 2014 11:41:30 GMT</lastBuildDate><atom:link href="http://iaarchiver.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[vimでshell実行後のEnterを押してくださいというプロンプトを消す]]></title><description><![CDATA[<p><a href="http://superuser.com/questions/498306/how-to-remove-the-prompt-when-execute-shell-command-in-vim">http://superuser.com/questions/498306/how-to-remove-the-prompt-when-execute-shell-command-in-vim</a></p>
=======
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[notions:iaarchiver]]></title><description><![CDATA[blog where I write notions]]></description><link>http://iaarchiver.github.io</link><generator>NodeJS RSS Module</generator><lastBuildDate>Sun, 06 Jul 2014 16:37:43 GMT</lastBuildDate><atom:link href="http://iaarchiver.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[vimでshell実行後のEnterを押してくださいというプロンプトを消す]]></title><description><![CDATA[<p><a href="http://superuser.com/questions/498306/how-to-remove-the-prompt-when-execute-shell-command-in-vim">http://superuser.com/questions/498306/how-to-remove-the-prompt-when-execute-shell-command-in-vim</a></p>
>>>>>>> e49b002... changed expandSidebar func
=======
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[notions:iaarchiver]]></title><description><![CDATA[blog where I write notions]]></description><link>http://iaarchiver.github.io</link><generator>NodeJS RSS Module</generator><lastBuildDate>Mon, 07 Jul 2014 00:50:15 GMT</lastBuildDate><atom:link href="http://iaarchiver.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[vimでshell実行後のEnterを押してくださいというプロンプトを消す]]></title><description><![CDATA[<p><a href="http://superuser.com/questions/498306/how-to-remove-the-prompt-when-execute-shell-command-in-vim">http://superuser.com/questions/498306/how-to-remove-the-prompt-when-execute-shell-command-in-vim</a></p>
>>>>>>> 96d13a2... fixed sidebar-search
<pre><code><span class="pseudo">:silent</span> !<span class="tag">open</span> "%<span class="pseudo">:p</span><span class="pseudo">:h"</span></code></pre>
<p>とする．しかしtmuxではCtrl-Lでリドローしないと正しく表示されないので最後にredraw!を加える</p>
<pre><code><span class="symbol">:exe</span> <span class="string">"silent !open \"%:p:h\""</span> | redraw!</code></pre>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2231.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2231.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 13:31:00 GMT</pubDate></item><item><title><![CDATA[tmuxでペイン分割したらCWDを維持してくれない]]></title><description><![CDATA[<p><a href="http://d.hatena.ne.jp/tacahiroy/20140321/1395414592">http://d.hatena.ne.jp/tacahiroy/20140321/1395414592</a></p>
<p>以前は<code>default-path</code>として勝手にCWDを維持して分割してくれていたみたいだが，tmux1.9より分割時のCWDは環境変数$PWDを参照する仕様に変更されたみたい．</p>
<pre><code><span class="title">tmux</span> split-window [-c <span class="variable">$PWD</span>]</code></pre>
<p>そのおかげでスクリプトから<code>tmux split-window</code>する場合は正しい$PWDを読んでくれるときもあれば，古い$PWDを読んでしまうこともある．</p>
<p>なので分割前ペインのCWDをきちんと維持して分割するには以下を使用する</p>
<pre><code><span class="title">tmux</span> split-window -c <span class="string">'#{pane_current_path}'</span></code></pre>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2230.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2230.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 13:30:00 GMT</pubDate></item><item><title><![CDATA[Ubuntu上のVMPlayer使用時にsynergysが落ちる]]></title><description><![CDATA[<p><a href="http://synergy-foss.org/spit/issues/details/3561/">http://synergy-foss.org/spit/issues/details/3561/</a></p>
<p>vmwareのマウス切り替えとsynergyのスクリーン切り替えがコンフリクトするらしい．その結果synergysがSegmentationFaultエラーを出す．Vmwareウインドウの境界とsynergyの境界を同時（短時間の間）に越えると必ず落ちる．</p>
<p>対策はsynergy.confにswitchDelayを設定すること．</p>
<pre><code><span class="attribute">section</span>: <span class="string">options</span>
    <span class="attribute">switchDelay</span>: <span class="string">500</span>
<span class="attribute">end</code></pre>
<p>これでほぼ落ちることはなくなった．</p>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2221.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2221.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 13:21:00 GMT</pubDate></item><item><title><![CDATA[シンボリックリンクのオリジナルのパスを取得する]]></title><description><![CDATA[<p>結論から言えば<code>pwd -P</code>をサブシェルで<code>cd</code>してから使う方法が一番良いっぽい．</p>
<pre><code># シンボリックリンクのパスを<span class="variable">$file</span>としたとき
originalpath=<span class="variable">$(</span>cd <span class="variable">$(</span><span class="keyword">dirname</span> <span class="variable">$file</span>); <span class="keyword">pwd</span> -P)</code></pre>
<p><code>pwd -P</code>でカレントディレクトリのオリジナルパスを表示してくれる．
単純に相対パスを絶対パスへ変換したいだけなら<code>-P</code>を取ればよい．</p>
<p>他の方法としては<code>readlink</code>コマンドを使用する方法がある</p>
<pre><code>readlink ~/<span class="variable">.vim</span>
/Users/iaarchiver/Dropbox/Sync/dotfiles/<span class="variable">.vim</span></code></pre>
<p>しかしこれは引数がSymlink以外だと何にも返してくれない．Symlinkであっても辿れるのは対象のリンク先のみ．再帰的にオリジナルを探索してくれるわけではないので注意．</p>
<p>GNUでは再帰的にオリジナルを探してくれる<code>readlink -f</code>, 他にも<code>realpath</code>もあるらしい．</p>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2217.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2217.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 13:17:00 GMT</pubDate></item><item><title><![CDATA[コマンドを指定してTerminal.appを実行する]]></title><description><![CDATA[<p>Terminal.appでは以下のように引数を与えることが可能．</p>
<ul>
<li><p>ワーキングディレクトリを指定して起動する</p>
<pre><code>  <span class="title">open</span> -a <span class="string">"Terminal"</span> ~/Desktop</code></pre>
</li>
<li><p>実行ファイルを指定して起動</p>
<pre><code>  <span class="title">open</span> -a <span class="string">"Terminal"</span><span class="string">" ~/test.sh</code></pre>
</li>
</ul>
<p>しかしGnome-Terminalのように直接コマンドを引数に与えることができない．シェルスクリプトやVimなどでどうしてもコマンドを与えたい場合は次のような方法がある．</p>
<h2 id="tmp-">tmpファイルを経由する</h2>
<pre><code><span class="title">echo</span> <span class="string">"echo 'Hello'"</span> &gt; .tmp/tmp; <span class="title">chmod</span> +x .tmp/tmp; <span class="title">open</span> -a <span class="string">"Terminal"</span> .tmp/tmp</code></pre>
<h2 id="applescript-">Applescriptを経由する</h2>
<pre><code><span class="function_start"><span class="keyword">on</span> <span class="title">run</span></span> argv
    <span class="comment">-- 引数がひとつのみのとき実行する</span>
    <span class="keyword">if</span> <span class="property">length</span> <span class="keyword">of</span> argv <span class="keyword">is</span> <span class="number">1</span> <span class="keyword">then</span>
        <span class="keyword">set</span> launch_command <span class="keyword">to</span> <span class="keyword">the</span> <span class="keyword">first</span> <span class="property">item</span> <span class="keyword">of</span> argv
        <span class="keyword">tell</span> <span class="type">application</span> <span class="string">"Terminal"</span>
            do <span class="keyword">script</span> launch_command
            <span class="command">activate</span>
        <span class="keyword">end</span> <span class="keyword">tell</span>        
    <span class="keyword">end</span> <span class="keyword">if</span>
<span class="keyword">end</span> <span class="command">run</span></code></pre>
<p>上のコードを<code>OpenTerminalWithCommand.scpt</code>として保存すれば以下のようにして利用可能．</p>
<pre><code><span class="title">osascript</span> OpenTerminalWithCommand.scpt <span class="string">"echo Hi"</span></code></pre>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2205.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2205.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 13:05:00 GMT</pubDate></item><item><title><![CDATA[特定のアプリのみ終了時にウインドウを閉じる]]></title><description><![CDATA[<p>Mavericksではアプリケーション終了時の状態を保存し，再び実行したときに復元するのがデフォルト．これはシステム環境設定＞一般＞”アプリケーションを終了するときにウィンドウを閉じる”というオプションをオンにすることで無効にできる．</p>
<p>便利なので有効にしておきたいが，Terminal.appなど一部アプリケーションでは終了時のウインドウを消したい場合，以下のコマンドで特定のアプリのみ無効にすることができる．</p>
<pre><code>defaults write com<span class="variable">.apple</span><span class="variable">.Terminal</span> NSQuitAlwaysKeepsWindows -<span class="keyword">int</span> <span class="number">0</span></code></pre>
<p>ちなみにアプリの識別子（<code>com.apple.Terminal</code>など）は以下のように取得可能．</p>
<pre><code>osascript -e <span class="attribute">'id</span> <span class="keyword">of</span> app <span class="string">"Terminal"</span>'</code></pre>
<p><a href="http://superuser.com/questions/346369/getting-the-bundle-identifier-of-an-os-x-application-in-a-shell-script">http://superuser.com/questions/346369/getting-the-bundle-identifier-of-an-os-x-application-in-a-shell-script</a></p>
]]></description><link>http://iaarchiver.github.io/posts/2014-07-01-2140.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-07-01-2140.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Tue, 01 Jul 2014 12:40:00 GMT</pubDate></item><item><title><![CDATA[Info.plistにLSBackgroundOnlyを設定する]]></title><description><![CDATA[<p>Applescriptでアプリを書きだした時，実行する度にドックでアイコンが一瞬バウンドするのを防ぐにはLSBackgroundOnlyキーをTrueにしてやると良い．</p>
<p>以下を.app/Contents/info.plstに追加する</p>
<pre><code><span class="tag">&lt;<span class="title">key</span>&gt;</span>LSBackgroundOnly<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
<span class="tag">&lt;<span class="title">string</span>&gt;</span>1<span class="tag">&lt;/<span class="title">string</span>&gt;</span></code></pre>
<p>以下のように一発で設定することもできる．</p>
<pre><code>/usr/libexec/PlistBuddy -c 'Add :LSBackgroundOnly <span class="keyword">bool</span> <span class="literal">true</span>' ~/Applications/test.app/Contents/Info.plist</code></pre>
]]></description><link>http://iaarchiver.github.io/posts/2014-06-27-1125.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2014-06-27-1125.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Fri, 27 Jun 2014 02:25:00 GMT</pubDate></item><item><title><![CDATA[LinuxからDayOneの読み書きを行う]]></title><description><![CDATA[<p>コマンドラインからテキストをジャーナリングできる<a href="http://maebert.github.io/jrnl/">jrnl</a>というアプリを使用してDayOneのエントリーを読み書きする方法のメモ．</p>
<p>MacであればDayOneオフィシャルの<a href="http://dayoneapp.com/tools/">コマンドラインツール</a>が使用できるので，それ以外の端末からDayOneエントリーを操作したい人向けです．</p>
<h2 id="jrnl-">jrnlのインストールと起動</h2>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> pip install jrnl
$ jrnl
Path <span class="keyword">to</span> your journal file (leave blank <span class="keyword">for</span> ~/journal.txt): 
Enter password <span class="keyword">for</span> journal (leave blank <span class="keyword">for</span> <span class="keyword">no</span> encryption): 
[Compose Entry] </code></pre>
<p>初回起動時に保存先とパスワードを聞かれますが無入力で良いです．この設定は<code>~/.jrnl_config</code>にて変更が可能です．</p>
<h2 id="dayone-">DayOneのエントリーを統合する</h2>
<p><code>~/.jrnl_config</code>の<code>journals</code>キーを以下のように変更．</p>
<pre><code>&quot;journals&quot;: {
    &quot;default&quot;: &quot;/path/to/Journal.dayone/&quot;
}</code></pre>
<p><code>Journal.dayone</code>はDayOneのエントリーを保存しているフォルダであり，DayOneの同期先によって異なります．例えばDropboxで同期している場合は<code>/path/to/Dropbox/Apps/Day\ One/Journal.dayone</code>のようになります．</p>
<h2 id="keyerror-time-zone-">KeyError:&#39;Time Zone&#39;が出るとき</h2>
<p>最新のバージョンのDayOneではすべての新規エントリーにタイムゾーンが付与される仕様になっていますが，古いエントリーにタイムゾーンの情報が付与されていないとき，それが原因でエラーが出ます．（jrnl1.4.2で確認．今後修正されるかも）</p>
<pre><code><span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/jrnl/Journal.py"</span>, line <span class="number">316</span>, <span class="keyword">in</span> parse
timezone = pytz.timezone(dict_entry[<span class="attribute">'Time</span> Zone'])
KeyError: <span class="attribute">'Time</span> Zone'</code></pre>
<p>jrnlを起動した際に上のようなエラーが出るときは<code>sudo emacs /usr/local/lib/python2.7/dist-packages/jrnl/Journal.py</code>でエディタを開き，以下のように編集します．</p>
<pre><code><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, filenames)</span>:</span>
    <span class="string">"""Instead of parsing a string into an entry, this method will take a list
    of filenames, interpret each as a plist file and create a new entry from that."""</span>
    self.entries = []
    <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:
        <span class="keyword">with</span> open(filename, <span class="string">'rb'</span>) <span class="keyword">as</span> plist_entry:
            dict_entry = plistlib.readPlist(plist_entry)
            <span class="keyword">try</span>:
                timezone = pytz.timezone(dict_entry[<span class="string">'Time Zone'</span>])
  -         <span class="keyword">except</span> pytz.exceptions.UnknownTimeZoneError:
  +         <span class="keyword">except</span> :
                timezone = pytz.timezone(util.get_local_timezone())</code></pre>
<h2 id="jrnl1-4-2-">jrnl1.4.2でできること</h2>
<ul>
<li>最近追加したエントリーを３件表示<pre><code>  <span class="title">jrnl</span> -n <span class="number">3</span></code></pre>
</li>
<li>すべてのエントリーのタイトルのみ表示<pre><code>  <span class="title">jrnl</span> -short</code></pre>
</li>
<li>エントリーを追加<pre><code>  <span class="title">jrnl</span>
  [Compose Entry]
  <span class="comment"># Enterで入力終了</span></code></pre>
</li>
<li>日時とタグを指定してエントリーを追加<pre><code>  <span class="title">jrnl</span> yesterday: 鳩のえさやり @公園</code></pre>
</li>
</ul>
<h2 id="jrnl1-4-2-">jrnl1.4.2でできないこと</h2>
<ul>
<li>過去エントリーの編集，削除（jrnlを経由せずに<code>Journal.dayone</code>フォルダー内の<code>.doentry</code>ファイルを直接編集/削除は可能ですが，同期したMacやiPhoneで操作したほうが良いです．）</li>
<li>エントリーにメディア（画像，音声など）を追加する</li>
<li>エントリーの付与されたメディアを表示する</li>
</ul>
]]></description><link>http://iaarchiver.github.io/posts/2013-07-29-0152.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2013-07-29-0152.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Sun, 28 Jul 2013 16:52:00 GMT</pubDate></item><item><title><![CDATA[Ubuntu13.04でTimeCapsuleをマウントする]]></title><description><![CDATA[<p><a href="http://askubuntu.com/questions/285874/how-can-i-mount-cifs-shares-in-kubuntu-13-04">http://askubuntu.com/questions/285874/how-can-i-mount-cifs-shares-in-kubuntu-13-04</a></p>
<p>12.10のときと若干変更があったのでメモ．確認環境は13.04(64bit)，TimeCapsuleの共有ディスクはデバイスパスワードでアクセス制限している状態です．</p>
<p>予め<code>sudo apt-get install samba cifs-utils</code>を実行してsambaとcifs-utilsをインストールを確認しておきます．</p>
<h2 id="timecapsule-ip-">TimeCapsuleのホスト名，IPアドレスをまずは確認する．</h2>
<p>TimeCapsuleのIPアドレスやホスト名はmac上でAirmacユーティリティを使用することで確認できますが，Ubuntuから確認するには以下を実行します．</p>
<pre><code><span class="comment">$</span> <span class="comment">avahi</span>-<span class="comment">browse</span> <span class="literal">-</span><span class="comment">a</span> <span class="literal">-</span><span class="comment">p</code></pre>
<p>Bonjourネットワークに存在するすべてのホスト情報が一覧で表示されますので，その中からTimeCapsuleのものと思われるホスト名（hostname）とローカルIPアドレス（address）を確認します．</p>
<pre><code><span class="keyword">...</span>
=  wlan0 IPv4 TimeCapsule                                   Apple AirPort        local
   hostname = [TimeCapsule.local]
   address = [<span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span>]
   port = [<span class="number">5009</span>]
<span class="keyword">...</span></code></pre>
<p>このような表示が見つかれば，<code>TimeCapsule.local</code>，もしくは<code>192.168.0.1</code>でTimeCapsuleにアクセスすることが確認できます．</p>
<h2 id="-">端末からマウントさせる</h2>
<p><code>TimeCapsule.local</code>というホスト名のTimeCapsuleを<code>/media/timecapsule</code>にマウントさせるには以下を実行します．（予め<code>sudo mkdir /media/timecapsule</code>でマウントポイントのディレクトリを作成しておく必要があります．）</p>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> mount.cifs //TimeCapsule.<span class="keyword">local</span>/TimeCapsule /media/timecapsule -o pass=PASWORD,rw,iocharset=utf8,file_mode=<span class="number">0777</span>,dir_mode=<span class="number">0777</span>,sec=ntlm</code></pre>
<p><code>//TimeCapsule.local/</code>の部分は<code>//192.168.0.1/</code>のようにローカルIPアドレスで指定しても構いません．（13.04では<code>sec=ntlm</code>オプションが必要になりました．）</p>
<p>アンマウントさせる場合は以下を実行します．</p>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> umount /media/timecapsule</code></pre>
<h2 id="fstab-">fstabで自動マウントさせる</h2>
<p>起動時にマウントさせるには<code>/etc/fstab</code>に以下の行を追加します．</p>
<pre><code>/<span class="regexp">/TimeCapsule.local/</span><span class="constant">TimeCapsule</span>/  <span class="regexp">/media/timecapsule</span>  cifs password=macintosh,rw,iocharset=utf8,file_mode=<span class="number">0777</span>,dir_mode=<span class="number">0777</span>,sec=ntlm</code></pre>
<p>追加後，再起動もしくは<code>sudo mount -a</code>を実行でマウントが確認できれば成功です．</p>
]]></description><link>http://iaarchiver.github.io/posts/2013-07-11-2152.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2013-07-11-2152.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Thu, 11 Jul 2013 12:52:00 GMT</pubDate></item><item><title><![CDATA[Ubuntu13.04インストールおぼえがき]]></title><description><![CDATA[<h2 id="usb-">USBメモリからインストール</h2>
<p><a href="http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-ubuntu">http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-ubuntu</a><br>ブート可能なUSBメモリの作成方法が詳しく紹介されています．</p>
<h2 id="-">インストール後にまずすること</h2>
<ul>
<li><strong>Software Updaterでアップデートする．</strong><br>OS本体のインストールより時間がかかります．</li>
<li><strong>AdditionalDriversをインストール</strong><br>System Settings &gt; Software &amp; Updates &gt; Additional Driversから環境にあったドライバをインストールします．Nvidiaを使用しているなら再起動でNvidia X Server Settingsから細かい環境設定が行えるようになります．</li>
<li><strong>日本語環境の構築</strong><br>Language Support &gt; install/Remove LanguagesからJapaneseを選択してインストールします．デフォルトを日本語に変更したい場合は，Languages for menus and windowsで日本語を先頭にドラッグし，Apply System-Wideを押すと再起動後に変更されます．</li>
<li><strong>日本語入力を可能にする</strong><br><code>$ sudo apt-get install ibus-mozc</code>をibus-mozcをインストール後，Language Support &gt; Keyboard input method system にibusを選択すると起動時にibusを起動してくれます．</li>
</ul>
<h2 id="fstab-">fstabの編集</h2>
<p>起動時に自動的にマウントさせるドライブを設定します．</p>
<ul>
<li><h3 id="hdd-home-">HDDを/homeにマウントする</h3>
<p>ext4でフォーマットした<code>/dev/sdb1</code>というパスのパーティションを/homeとしてマウントさせたい場合，以下のような設定をfstabに加えます．</p>
<pre><code>  <span class="regexp">/dev/sdb1                  /</span>home          ext4      defaults,user_xattr      <span class="number">0</span>    <span class="number">0</span></code></pre>
</li>
<li><h3 id="timecapsule-">TimeCapsuleをマウントする</h3>
<p>参考：<a href="http://iaarchiver.github.io/posts/2013-07-11-2152.html">Ubuntu13.04でTimeCapsuleをマウントする</a></p>
</li>
</ul>
<p>ネットワーク上にあるTimeCapsuleの共有ディスクを起動時にマウントさせるには/etc/fstabに以下を追加します．</p>
<pre><code>/<span class="regexp">/TimeCapsule.local/</span><span class="constant">TimeCapsule</span>/  <span class="regexp">/media/timecapsule</span>  cifs  password=macintosh,rw,iocharset=utf8,file_mode=<span class="number">0777</span>,dir_mode=<span class="number">0777</span>,sec=ntlm</code></pre>
<p>* 12.10では必要ありませんでしたが13.04では<code>sec=ntlm</code>オプションが必要です．</p>
<ul>
<li><h3 id="ntfs-">NTFSディスクをマウントする</h3>
<p><code>/dev/sdc1</code>にあるntfsフォーマットのドライブをマウントさせる場合は以下を<code>/etc/fstab</code>に追加します．</p>
<pre><code>  <span class="regexp">/dev/sdc1                  /media/</span>ntfsdrive      ntfs      defaults      <span class="number">0</span>    <span class="number">0</span></code></pre>
</li>
</ul>
<h2 id="wifi-hiccup-">Wifiのhiccup（しゃっくり）を直す</h2>
<p><a href="http://askubuntu.com/questions/286079/rtl8188cu-usb-network-adaptor-on-ubuntu-13-04">http://askubuntu.com/questions/286079/rtl8188cu-usb-network-adaptor-on-ubuntu-13-04</a></p>
<p>12.10の頃からの症状ですが，Ubuntuが用意するRTL8192CUドライバの調子が悪いせいでWifi接続が一定の時間経過後に切れてしまいます．12.10ではRealteckで公開されている古いバージョンを導入すると直ったのですが，13.04ではダメな模様．そのかわり<a href="https://code.google.com/p/realtek-8188cus-wireless-drivers-3444749-ubuntu-1304/">こちら</a>で公開されている修正パッチを当てたものを導入すれば問題なく使えるようになりました．</p>
<ul>
<li><p>rtl8192cuドライバが使用されているか確認する</p>
<pre><code>  <span class="variable">$ </span>lsmod | grep <span class="number">8192</span></code></pre>
<p><code>rtl8192cu</code>などの情報が帰ってくればOK．</p>
</li>
<li><p><a href="https://code.google.com/p/realtek-8188cus-wireless-drivers-3444749-ubuntu-1304/downloads/list">こちら</a>からrtl8192cu-tjp-dkms_1.6_all.debをダウンロードしたらインストールする．</p>
<pre><code>  dpkg -<span class="built_in">i</span> ~/Downloads/rtl8192cu-tjp-<span class="transposed_variable">dkms_1.</span><span class="number">6</span><span class="transposed_variable">_all.</span>deb</code></pre>
</li>
<li><p><code>/etc/modprobe.d/blacklist.conf</code>に以下を加えて，Ubuntuが用意したドライバを使用させないようにする．</p>
<pre><code>  <span class="comment"># Blacklist native RealTek 8188CUs drivers</span>
  <span class="title">blacklist</span> rtl8192cu
  blacklist rtl8192c_common
  blacklist rtlwifi</code></pre>
</li>
</ul>
<h2 id="-">ファン制御を設定する</h2>
<p>まず<code>lm-sensors</code>と<code>fancontrol</code>をインストールします．</p>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> apt-<span class="keyword">get</span> install lm-sensors fancontrol</code></pre>
<p>次を実行してセンサーを検出します．</p>
<pre><code><span class="variable">$ </span>sensors-detect</code></pre>
<p>いろいろ聞かれますがだいたいイエスでOK．完了したら再起動をして次を実行します．(再起動なしではno pwm-capable sensorsというエラーが出ることがあります．)</p>
<pre><code><span class="char">$ </span>sudo service fancontrol stop // ファン制御が動いていないことを確認
<span class="char">$ </span>sudo pwmconfig</code></pre>
<p>あとは応答する形でファン制御設定をしていけばOK．</p>
<h2 id="burg-plymouth-">burg(ブートローダ)とPlymouth(スプラッシュスクリーン)を設定</h2>
<ul>
<li><h3 id="burg-">burgを設定する</h3>
<a href="http://iaarchiver.net/post/2011-12-29-1200">burgのインストール</a></li>
</ul>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> <span class="keyword">add</span>-apt-repository ppa:n-muench/burg
$ sudo apt-<span class="keyword">get</span> <span class="keyword">update</span>
$ sudo apt-<span class="keyword">get</span> install burg</code></pre>
<p>MBRで指定している起動ディスク（<code>/dev/sda</code>）へBurgを設定します．</p>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> burg-install <span class="string">"/dev/sda"</span>
$ sudo <span class="keyword">update</span>-burg</code></pre>
<p>起動をエミュレートして確認します．</p>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> burg-emu -D</code></pre>
<p>burgのローディング画面で<code>t</code>を押すとテーマの選択ができます．（その他コマンドは<code>h</code>で確認できます．）独自にテーマを用意する場合は<code>/boot/burg/themes</code>に置いておく必要があります．</p>
<ul>
<li><h3 id="plymouth-">Plymouthを設定する</h3>
<a href="http://www.ubunturoot.com/2010/08/paw-ubuntu-and-os-x-like-plymouth-theme.html">http://www.ubunturoot.com/2010/08/paw-ubuntu-and-os-x-like-plymouth-theme.html</a></li>
</ul>
<p>テーマのインストールと設定は上記参照．</p>
<p><strong>テーマが適用されない場合</strong><br>解像度が対応していないことが原因である可能性があります．そこで予め解像度を指定してやります．</p>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> gedit /etc/<span class="keyword">default</span>/burg
// grubを使用している場合は /etc/<span class="keyword">default</span>/grub</code></pre>
<p>以下を追加します．</p>
<pre><code><span class="setting">GRUB_GFXPAYLOAD_LINUX=<span class="value"><span class="string">"1024x768"</span></span></span></code></pre>
<p>その後コンソールから</p>
<pre><code>$ su<span class="operator"><span class="keyword">do</span> <span class="keyword">update</span>-burg</code></pre>
]]></description><link>http://iaarchiver.github.io/posts/2013-07-11-2000.html</link><guid isPermaLink="true">http://iaarchiver.github.io/posts/2013-07-11-2000.html</guid><dc:creator><![CDATA[iaarchiver]]></dc:creator><pubDate>Thu, 11 Jul 2013 11:00:00 GMT</pubDate></item></channel></rss>